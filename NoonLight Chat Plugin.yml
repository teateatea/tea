NoonLightChatHandler:
  type: world
  debug: false
  Default Constants:
    DefaultWorld: world
    SecondaryWorld: dream
    ChatStatusList: global|local|support|tmod|mod|admin
    Loginerror: <gold><&lb>Dev<&rb><yellow> Flag error in <white>'ChatStatus:<player.flag[ChatStatus]||Null Chat>'<yellow>. Join a channel.
    Loginglobal: <gold><&lb>Chat<&rb><dark_green> You are talking in <white>Global Chat
    Loginlocal: <gold><&lb>Chat<&rb><dark_green> You are talking in <white>Local Chat
    Loginsupport: <gold><&lb>Chat<&rb><dark_green> You talking in <white>Support Chat
    Logintmod: <gold><&lb>Chat<&rb><dark_green> You are talking in <white>T-Mod Chat
    Loginmod: <gold><&lb>Chat<&rb><dark_green> You are talking in <white>Mod Chat
    Loginadmin: <gold><&lb>Chat<&rb><dark_green> You talking in <white>Admin Chat

  events:
    # ON PLAYER LOGIN: ---------------------------------------------------------------------------
    on player login:
    # WAIT 1 SECOND TO REDUCE LOGIN LAG
    - wait 1s
    # IF %PLAYER% DOES NOT HAVE A CHATSTATUS FLAG, FLAG THEM TO GLOBAL BY DEFAULT
    - ^if <player.flag[ChatStatus]||null> == null {
      - ^flag player ChatStatus:global
    }
  #  - define LoginStatus <player.
    - narrate "<script.constant[Login<player.flag[ChatStatus]>]||<script.constant[Loginerror]>>" targets:<player>

    # ON PLAYER CHATS: ---------------------------------------------------------------------------
    on player chats:
    # DEFINE 'CHATSTATUS' AS %PLAYER%S CHATSTATUS FLAG
    - ^define chatstatus <player.flag[ChatStatus]||local>
    # DEFINE 'CHATWORLD' AS DEFAULTWORLD OR SECONDARYWORLD
    # We do this so that we can fake world locations in the code, during development. 
    - ^if <player.world> == w@<script.constant[DefaultWorld]||world> {
      - ^define chatworld <script.constant[DefaultWorld]||world>
    }
    else {
      - ^define chatworld <script.constant[SecondaryWorld]>
    }
    # RUN THE SCRIPT ASSOCIATED WITH CHAT_%CHATWORLD%_%CHATSTATUS%
    - inject locally chat_%chatworld%_%chatstatus%


    # CHAT WORLD global: ----------------------------------------------------------------------------
  chat_world_global:
    - if <player.flag[gmute]||false> == true {
      - ^narrate "<gold><&lb>Chat<&rb> <red>You have been muted from all Public Chat (<player.flag[gmute].expiration.formatted.replace[forever].with[Ongoing]||Ongoing>)"
      - ^determine passively cancelled
      - ^queue clear
    }
    - if <server.flag[gmute]||false> == true {
      - ^narrate "Global Chat has been Muted(<player.flag[gmute].expiration.formatted.replace[forever].with[ongoing]||ongoing>)"
      - ^determine passively cancelled
      - ^queue clear
    }
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>].size> <= 1 {
      - ^narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    # CHECK FOR %PLAYER%S NATION {
    # USE RELEVANT GLOBAL FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE }
    - if <player.nation.name||null> != null {
      - ^determine passively <proc[ChatPluginFilter].context[<context.message>]>
      - ^determine passively "FORMAT:WorldGlobalNationFormat"
      - ^determine passively "RECIPIENTS:<server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>]>"
      - ^if <server.flag[TeaModBotOn]||false> == true {
        - ^run TeaModBot def:<player.name>|<context.message>
      }
    }
    else {
      - ^determine passively <proc[ChatPluginFilter].context[<context.message>]>
      - ^determine passively "FORMAT:WorldGlobalNationlessFormat"
      - ^determine passively "RECIPIENTS:<server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>]>"
      - ^if <server.flag[TeaModBotOn]||false> == true {
        - ^run TeaModBot def:<player.name>|<context.message>
      }
    }

    # CHAT WORLD support: ----------------------------------------------------------------------------
  chat_world_support:
    - if <player.flag[gmute]||false> == true {
      - ^narrate "<gold><&lb>Chat<&rb> <red>You have been muted from all Public Chat (<player.flag[gmute].expiration.formatted.replace[forever].with[Ongoing]||Ongoing>)"
      - ^determine passively cancelled
      - ^queue clear
    }
    - if <server.flag[gmute]||false> == true {
      - ^narrate "Support Chat has been Muted(<player.flag[gmute].expiration.formatted.replace[forever].with[ongoing]||ongoing>)"
      - ^determine passively cancelled
      - ^queue clear
    }
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>].size> <= 1 {
      - ^narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    # CHECK FOR %PLAYER%S NATION {
    # USE RELEVANT GLOBAL FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE }
    - if <player.nation.name||null> != null {
      - ^determine passively <proc[ChatPluginFilter].context[<context.message>]>
      - ^determine passively "FORMAT:WorldSupportFormat"
      - ^determine passively "RECIPIENTS:<server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>]>"
      - ^if <server.flag[TeaModBotOn]||false> == true {
        - ^run TeaModBot def:<player.name>|<context.message>
      }
    }
    else {
      - ^determine passively <proc[ChatPluginFilter].context[<context.message>]>
      - ^determine passively "FORMAT:WorldSupportFormat"
      - ^determine passively "RECIPIENTS:<server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>]>"
      - ^if <server.flag[TeaModBotOn]||false> == true {
        - ^run TeaModBot def:<player.name>|<context.message>
      }
    }

    # CHAT WORLD LOCAL: --------------------------------------------------------------------------
  chat_world_local:
    # IF THERE ARE NO PLAYERS WITHIN 70 BLOCKS, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW NOBODY CAN HEAR THEM }
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>No one is in range to hear you!" targets:<player>
    }
    # CHECK FOR %PLAYER%S NATION {
    # USE RELEVANT LOCAL FORMAT TO SEND MESSAGE TO ALL PLAYERS WITHIN 70 BLOCKS }
    - if <player.nation.name||null> != null {
      - ^determine passively "FORMAT:WorldLocalNationFormat"
      - ^determine passively "RECIPIENTS:<player.location.find.players.within[70]>"
      - narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyLocalNationFormat
    }
    else {
      - ^determine passively "FORMAT:WorldLocalNationlessFormat"
      - ^determine passively "RECIPIENTS:<player.location.find.players.within[70]>"
      - narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyLocalNationlessFormat
    }


    # CHAT WORLD TOWN: ---------------------------------------------------------------------------
  chat_world_town:
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE THAT BELONG TO %PLAYER%S TOWN, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY HAVE NO FRIENDS }
    - if <server.list_online_players.filter[town.name.is[==].to[<player.town.name||null>]].include[<player>].size> <= 2 {
      - narrate "You are alone in this channel!" targets:<player>
    }
    # USE RELEVANT TOWN CHAT FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE THAT BELONG TO %PLAYER%S TOWN
    - ^determine passively "FORMAT:WorldTCFormat"
    - ^determine passively "RECIPIENTS:<server.list_online_players.filter[town.name.is[==].to[<player.town.name>]].exclude[<server.get_online_players_flagged[TownChatOff]>]>"
    - narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy]> format:WorldSpyTCFormat
	  
    # CHAT WORLD NATION: -------------------------------------------------------------------------
  chat_world_nation:
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE THAT BELONG TO %PLAYER%S NATION, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.filter[nation.name.is[==].to[<player.nation.name||null>]].include[<player>].size> <= 2 {
      - narrate "You are alone in this channel!" targets:<player>
    }
    # USE RELEVANT NATION CHAT FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE THAT BELONG TO %PLAYER%S TOWN
    - ^determine passively "FORMAT:WorldNCFormat"
    - ^determine passively "RECIPIENTS:<server.list_online_players.filter[nation.name.is[==].to[<player.nation.name>]].exclude[<server.get_online_players_flagged[NationChatOff]>]>"
    - narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy]> format:WorldSpyNCFormat


    # CHAT WORLD MOD: -------------------------------------------------------------------------
  chat_world_mod:
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE THAT HAVE MOD PERMS, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.filter[has_permission[chat.mod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    # USE RELEVANT MOD CHAT FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE THAT HAVE MOD PERMS
    - ^determine passively "FORMAT:WorldModFormat"
    - ^determine passively "RECIPIENTS:<server.list_online_players.filter[has_permission[chat.mod]]>"

  chat_world_tmod:
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE THAT HAVE TMOD PERMS, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.filter[has_permission[chat.tmod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    # USE RELEVANT TMOD CHAT FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE THAT HAVE TMOD PERMS
    - ^determine passively "FORMAT:WorldTmodFormat"
    - ^determine passively "RECIPIENTS:<server.list_online_players.filter[has_permission[chat.tmod]]>"
    # CHAT WORLD ADMIN: -------------------------------------------------------------------------
  chat_world_admin:
    # IF THERE IS ONE OR FEWER PLAYERS ONLINE THAT HAVE MOD PERMS, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.filter[has_permission[towny.chat.admin]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>Sorry, you are alone in this channel!" targets:<player>
    }
    # USE RELEVANT MOD CHAT FORMAT TO SEND MESSAGE TO ALL PLAYERS ONLINE THAT HAVE MOD PERMS
    - ^determine passively "FORMAT:WorldAdminFormat"
    - ^determine passively "RECIPIENTS:<server.list_online_players.filter[has_permission[towny.chat.admin]]>"


    # CHAT WORLD OOC: -----------------------------------------------------------------------------
  chat_world_ooc:
    # IF THERE ARE NO PLAYERS WITHIN 70 BLOCKS, THEN %PLAYER% IS ALONE {
    # LET THEM KNOW NOBODY CAN HEAR THEM }
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "No one is in range to hear you!" targets:<player>
    }
    # CHECK FOR %PLAYER%S NATION {
    # USE RELEVANT LOCAL FORMAT TO SEND MESSAGE TO ALL PLAYERS WITHIN 70 BLOCKS }
    - if <player.nation.name||null> != null {
      - ^determine passively "FORMAT:WorldOOCNationFormat"
      - ^determine passively "RECIPIENTS:<player.location.find.players.within[70]>"
      - ^narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyOOCNationFormat
    }
    else {
      - ^determine passively "FORMAT:WorldOOCNationlessFormat"
      - ^determine passively "RECIPIENTS:<player.location.find.players.within[70]>"
      - ^narrate "<context.message>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyOOCNationlessFormat
    }


    # ----------------------------------- #
    # WORLD BOUNDARY #
    # ----------------------------------- #

    # FOR NOW, ANY CASE OF CHAT IN ANY OTHER WORLD IS TREATED
    # AS THOUGH IT WERE IN THE DEFAULT WORLD.

  chat_dream_global:
    - inject locally chat_world_global

  chat_dream_town:
    - inject locally chat_world_town

  chat_dream_nation:
    - inject locally chat_world_nation

  chat_dream_mod:
    - inject locally chat_world_mod
    
  chat_dream_admin:
    - inject locally chat_world_admin

  chat_dream_local:
    - inject locally chat_world_local

  chat_dream_ooc:
    - inject locally chat_world_ooc


    # ----------------------------------- #
    # COMMANDS #
    # ----------------------------------- #

    # GLOBAL CHAT COMMAND ------------------------------------------------------------------------
    # /g (<text>)
    # /b (<text>)
    # /global (<text>)
globalMuteCommand:
  type: command
  debug: true
  name: gmute
  description: globalmute
  usage: /g <&lt>Hello World<&gt>
  aliases:
  - globalmute
  permission: chat.gmute
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
    # I DON'T MIND ALLOWING PLAYERS TO TAB COMPLETE OTHER PLAYERS NAMES
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <c.args.get[1]||null> == null {
    - ^narrate "<gold><&lb>Chat<&rb> <green>/gmute <yellow>player <green>(true)/false (forever)/time in minutes"
    - queue clear
    }
  - define player <c.args.get[1]>
  - if <c.args.size> >= 2 {
    - if <c.args.last.as_int||null> == <c.args.last> {
      - define duration <c.args.last>
      }
      else {
      - define duration forever
      }
    - if <li@true|false.contains[<c.args.get[2]>]> == true {
      - define activation <c.args.get[2]>
      }
      else {
      - define activation true
      }
    }
    else {
    - define duration forever
    - define activation true
    }
    
  - if %duration% == forever {
    - flag <p@%player%> gmute:%activation%
    - ^narrate "<t[%activation%]:<yellow>%player% has been muted! <p@%player%.flag[gmute].expiration.formatted.replace[forever].with[Ongoing!]||Ongoing!>||<green>%player% has been unmuted!>" targets:<server.list_online_players.filter[has_permission[chat.tmod]]> format:WorldModFormat

    }
    else {

    - flag <p@%player%> gmute:%activation% duration:%duration%
    - ^narrate "<t[%activation%]:<yellow>%player% has been muted! <p@%player%.flag[gmute].expiration.formatted.replace[forever].with[Ongoing!]||Ongoing!>||<green>%player% has been unmuted!>" targets:<server.list_online_players.filter[has_permission[chat.tmod]]> format:WorldModFormat

    }
  
  
globalChatCommand:
  type: command
  debug: false
  name: g
  description: global
  usage: /g <&lt>Hello World<&gt>
  aliases:
  - b
  - global
  permission: chat.global
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
    # I DON'T MIND ALLOWING PLAYERS TO TAB COMPLETE OTHER PLAYERS NAMES
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <player.flag[gmute]||false> == true {
    - ^determine passively cancelled
    - ^narrate "<gold><&lb>Chat<&rb> <red>You have been muted from all Public Chat (<player.flag[gmute].expiration.formatted.replace[forever].with[Ongoing]||Ongoing>)"
    - ^queue clear
    }
  - if <server.flag[gmute]||false> == true {
    - ^narrate "Global Chat has been Muted(<player.flag[gmute].expiration.formatted.replace[forever].with[ongoing]||ongoing>)"
    - ^determine passively cancelled
    - ^queue clear
    }
    # IF THERE AREN'T NO ARGUMENTS (%PLAYER% TYPE /g hello world) {
  - if <context.raw_args> != "" {
      # IF GLOBAL CHAT HAS BEEN TURNED OFF {
        # TURN IT BACK ON AND LET THEM KNOW }
    - if <player.flag[GlobalChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have rejoined <white>Global Chat" targets:<player>
      - flag <player> GlobalChatOff:!
    }

      # IF THERE ARE NO PLAYERS ONLINE {
        # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }

      # NATION CHECK {
        # USE APPROPRIATE FORMAT TO NARRATE TO ALL PLAYERS ONLINE } }
    - if <player.nation.name||null> != null {
      - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>]> format:WorldGlobalNationFormat
    }
    else {
      - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>]> format:WorldGlobalNationlessFormat
    }
    - ^if <server.flag[TeaModBotOn]||false> == true {
      - run TeaModBot def:<player.name>|<context.raw_args>
    }
  }

    # ELSE (IF THERE ARE NO ARGUMENTS BECAUSE %PLAYER% TYPED /g) {
  else {
      # IF GLOBAL CHAT HAS BEEN TURNED OFF {
        # TURN IT BACK ON AND LET THEM KNOW }
    - if <player.flag[GlobalChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have rejoined <white>Global Chat" targets:<player>
      - flag <player> GlobalChatOff:!
    }
      # IF THEY WEREN'T ALREADY IN GLOBAL CHAT {
        # SWITCH THEM TO GLOBAL CHAT AND LET THEM KNOW }
      # ELSE (IF THEY WERE IN GLOBAL CHAT ALREADY) {
        # LET THEM KNOW THEY ARE DUMB }
    - if <player.flag[ChatStatus]||local> != global {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>Global Chat"
      - flag <player> ChatStatus:global
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>Global Chat"
    }
      # IF THERE ARE NO PLAYERS LISTENING {
        # LET THEM KNOW THEY ARE ALONE } }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[GlobalChatOff]>].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
  }

    # GLOBAL CHAT OFF COMMAND --------------------------------------------------------------------
    # /goff
    # /globaloff
    

  
SupportChatCommand:
  type: command
  debug: false
  name: s
  description: support
  usage: /s <&lt>Hello World<&gt>
  aliases:
  - support
  - sc
  permission: chat.support
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
    # I DON'T MIND ALLOWING PLAYERS TO TAB COMPLETE OTHER PLAYERS NAMES
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
  - if <player.flag[gmute]||false> == true {
    - ^determine passively cancelled
    - ^narrate "<gold><&lb>Chat<&rb> <red>You have been muted from all Public Chat (<player.flag[gmute].expiration.formatted.replace[forever].with[Ongoing]||Ongoing>)"
    - ^queue clear
    }
  - if <server.flag[gmute]||false> == true {
    - ^narrate "Support Chat has been Muted(<player.flag[gmute].expiration.formatted.replace[forever].with[ongoing]||ongoing>)"
    - ^determine passively cancelled
    - ^queue clear
    }
    # IF THERE AREN'T NO ARGUMENTS (%PLAYER% TYPE /g hello world) {
  - if <context.raw_args> != "" {
      # IF GLOBAL CHAT HAS BEEN TURNED OFF {
        # TURN IT BACK ON AND LET THEM KNOW }
    - if <player.flag[SupportChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have rejoined <white>Support Chat" targets:<player>
      - flag <player> SupportChatOff:!
    }

      # IF THERE ARE NO PLAYERS ONLINE {
        # LET THEM KNOW THEY ARE ALONE }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }

      # NATION CHECK {
        # USE APPROPRIATE FORMAT TO NARRATE TO ALL PLAYERS ONLINE } }
    - if <player.nation.name||null> != null {
      - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>]> format:WorldSupportFormat
    }
    else {
      - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>]> format:WorldSupportFormat
    }
    - ^if <server.flag[TeaModBotOn]||false> == true {
      - run TeaModBot def:<player.name>|<context.raw_args>
    }
  }

    # ELSE (IF THERE ARE NO ARGUMENTS BECAUSE %PLAYER% TYPED /g) {
  else {
      # IF GLOBAL CHAT HAS BEEN TURNED OFF {
        # TURN IT BACK ON AND LET THEM KNOW }
    - if <player.flag[SupportChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have rejoined <white>Support Chat" targets:<player>
      - flag <player> SupportChatOff:!
    }
      # IF THEY WEREN'T ALREADY IN GLOBAL CHAT {
        # SWITCH THEM TO GLOBAL CHAT AND LET THEM KNOW }
      # ELSE (IF THEY WERE IN GLOBAL CHAT ALREADY) {
        # LET THEM KNOW THEY ARE DUMB }
    - if <player.flag[ChatStatus]||local> != support {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>Support Chat"
      - flag <player> ChatStatus:support
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>Support Chat"
    }
      # IF THERE ARE NO PLAYERS LISTENING {
        # LET THEM KNOW THEY ARE ALONE } }
    - if <server.list_online_players.exclude[<server.get_online_players_flagged[SupportChatOff]>].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
  }

    # GLOBAL CHAT OFF COMMAND --------------------------------------------------------------------
    # /goff
    # /globaloff

globalChatOFFCommand:
  type: command
  debug: false
  name: goff
  description: global
  usage: /goff <&lb>global chat OFF<&rb>
  aliases:
  - globaloff
  permission: chat.goff
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  script:
    # IF GLOBAL CHAT OFF IS TRUE (%PLAYER% HAS ALREADY LEFT GLOBAL CHAT) {
      # LET THEM KNOW THEY ALREADY LEFT }
    # ELSE (THEY HAVEN'T LEFT YET) {
      # LET THEM LEAVE AND TELL THEM }
  - if <player.flag[GlobalChatOff]||false> == true {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have already left <white>Global Chat" targets:<player>
  }
  else {
    - narrate "<gold><&lb>Chat<&rb> <dark_green>You have left <white>Global Chat" targets:<player>
    - flag <player> GlobalChatOff:true
  }

    # IF %PLAYER% WAS TALKING IN GLOBAL {
      # SWITCH THEM OUT TO LOCAL }
  - if <player.flag[ChatStatus]||local> == global {
    - ^narrate "<gold><&lb>Chat<&rb><dark_green> You have been switched to <white>Local"
    - flag <player> ChatStatus:local
  }

SupportChatOFFCommand:
  type: command
  debug: false
  name: soff
  description: support chat off
  usage: /soff <&lb>global chat OFF<&rb>
  aliases:
  - supportoff
  permission: chat.soff
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  script:
    # IF GLOBAL CHAT OFF IS TRUE (%PLAYER% HAS ALREADY LEFT GLOBAL CHAT) {
      # LET THEM KNOW THEY ALREADY LEFT }
    # ELSE (THEY HAVEN'T LEFT YET) {
      # LET THEM LEAVE AND TELL THEM }
  - if <player.flag[SupportChatOff]||false> == true {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have already left <white>Support Chat" targets:<player>
  }
  else {
    - narrate "<gold><&lb>Chat<&rb> <dark_green>You have left <white>Support Chat" targets:<player>
    - flag <player> SupportChatOff:true
  }

    # IF %PLAYER% WAS TALKING IN GLOBAL {
      # SWITCH THEM OUT TO LOCAL }
  - if <player.flag[ChatStatus]||local> == support {
    - ^narrate "<gold><&lb>Chat<&rb><dark_green> You have been switched to <white>Local"
    - flag <player> ChatStatus:local
  }

nationChatOFFCommand:
  type: command
  debug: false
  name: ncoff
  description: nationchatoff
  usage: /ncoff <&lb>nation chat OFF<&rb>
  aliases:
  - nationoff
  - nationchatoff
  permission: my.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  script:
    # IF NATION CHAT OFF IS TRUE (%PLAYER% HAS ALREADY LEFT NATION CHAT) {
      # LET THEM KNOW THEY ALREADY LEFT }
    # ELSE (THEY HAVEN'T LEFT YET) {
      # LET THEM LEAVE AND TELL THEM }
  - if <player.flag[NationChatOff]||false> == true {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have already left <white>nation chat" targets:<player>
  }
  else {
    - narrate "<gold><&lb>Chat<&rb> <dark_green>You have left <white>nation chat" targets:<player>
    - flag <player> NationChatOff:true
  }

    # IF %PLAYER% WAS TALKING IN NATION {
      # SWITCH THEM OUT TO LOCAL }
  - if <player.flag[ChatStatus]||local> == nation {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have been switched to <white>local"
    - flag <player> ChatStatus:local
  }

townChatOFFCommand:
  type: command
  debug: false
  name: tcoff
  description: townchatoff
  usage: /tcoff <&lb>town chat OFF<&rb>
  aliases:
  - townoff
  - townchatoff
  permission: my.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  script:
    # IF TOWN CHAT OFF IS TRUE (%PLAYER% HAS ALREADY LEFT TOWN CHAT) {
      # LET THEM KNOW THEY ALREADY LEFT }
    # ELSE (THEY HAVEN'T LEFT YET) {
      # LET THEM LEAVE AND TELL THEM }
  - if <player.flag[TownChatOff]||false> == true {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have already left <white>town chat" targets:<player>
  }
  else {
    - narrate "<gold><&lb>Chat<&rb> <dark_green>You have left <white>town chat" targets:<player>
    - flag <player> TownChatOff:true
  }

    # IF %PLAYER% WAS TALKING IN NATION {
      # SWITCH THEM OUT TO LOCAL }
  - if <player.flag[ChatStatus]||local> == town {
    - narrate "<gold><&lb>Chat<&rb><dark_green> You have been switched to <white>local"
    - flag <player> ChatStatus:local
  }

SPYCommand:
  type: command
  debug: false
  name: spy
  description: spy
  usage: /spy
  permission: chat.spy
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  script:
    # IF GLOBAL CHAT OFF IS TRUE (%PLAYER% HAS ALREADY LEFT GLOBAL CHAT) {
      # LET THEM KNOW THEY ALREADY LEFT }
    # ELSE (THEY HAVEN'T LEFT YET) {
      # LET THEM LEAVE AND TELL THEM }
  - if <player.flag[SocialSpy]||false> == true {
    - narrate "<green>[<gray>SPY<green>] <gray>OFF" targets:<player>
    - flag <player> SocialSpy:!
  }
  else {
   # - narrate "<gray>[SPY] <white>ON" targets:<player>
    - random {
      - narrate "<green>[<gray>SPY<green>] <gray>ON <dark_gray><italic>- With great power comes great responsibility." targets:<player>
      - narrate "<green>[<gray>SPY<green>] <gray>ON <dark_gray><italic>- Please enjoy responsibly." targets:<player>
      - narrate "<green>[<gray>SPY<green>] <gray>ON <dark_gray><italic>- Knowledge is power." targets:<player>
      - narrate "<green>[<gray>SPY<green>] <gray>ON <dark_gray><italic><&nl>Knowing what<&nl>Thou knowest not<&nl>Is in a sense<&nl>Omniscience." targets:<player>
    }
    - flag <player> SocialSpy:true
  }


LocalChatCommand:
  type: command
  debug: false
  name: l
  description: local chat
  usage: /local <&lt>Hello Friend<&gt>
  aliases:
  - local
  - lc
  - rp
  permission: chat.local
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  Default Constants:
    DefaultWorld: world
    SecondaryWorld: dream
  script:
 # - if !<player.is_op||<context.server>> {
 #   - narrate "<red>You do not have permission for that command."
 #   - queue clear
 # }
 # if the player type /l HELLO FRIENDs ------------
  - if <context.raw_args> != "" {
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>No one is in range to hear you!" targets:<player>
    }
    # if the player is alive ----------------------
    - if <player.flag[SpiritStatus]||alive> == alive {
      - if <player.nation.name||null> != null {
        - narrate "<context.raw_args>" targets:<player.location.find.players.within[70]> format:WorldLocalNationFormat
        - ^narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyLocalNationFormat
      }
      else {
        - narrate "<context.raw_args>" targets:<player.location.find.players.within[70]> format:WorldLocalNationlessFormat
        - ^narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyLocalNationlessFormat
      }
    }
    # if the player is not alive (spirit/shade) ---
    else {
      - narrate "<proc[SpiritChatProcedure].context[<context.raw_args>]>" targets:<player.location.find.players.within[70]> format:WorldSpiritRaceFormat
     # - ^narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyLocalNationlessFormat
    }
  }
  # if the player only typed /L  -----------------
  else {
    - if <player.flag[ChatStatus]||local> != local {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>Local"
      - flag <player> ChatStatus:local
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>Local"
     # - flag <player> ChatStatus:local
    }
  }
 
OOCChatCommand:
  type: command
  debug: false
  name: ooc
  description: ooc chat
  usage: /ooc <&lt>Hello Friend<&gt>
  aliases:
  - outofcharacter
  permission: local.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  Default Constants:
    DefaultWorld: world
    SecondaryWorld: dream
  script:
 # - if !<player.is_op||<context.server>> {
 #   - narrate "<red>You do not have permission for that command."
 #   - queue clear
 # }
  - if <context.raw_args> != "" {
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "No one is in range to hear you!" targets:<player>
    }
    - if <player.location.world> == w@<script.constant[DefaultWorld]> {
      - if <player.nation.name||null> != null {
        - narrate "<context.raw_args>" targets:<player.location.find.players.within[70]> format:WorldOOCNationFormat
        - ^narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyOOCNationFormat
      }
      else {
        - narrate "<context.raw_args>" targets:<player.location.find.players.within[70]> format:WorldOOCNationlessFormat
        - ^narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy].exclude[<player.location.find.players.within[70]>]> format:WorldSpyOOCNationlessFormat

      }
    }
    else {
      - narrate "<context.raw_args>" targets:<player.location.find.players.within[70]> format:WorldOOCRaceFormat
    }
  }
  else {
    - if <player.flag[ChatStatus]||local> != ooc {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>out-of-character"
      - flag <player> ChatStatus:ooc
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>out-of-character"
     # - flag <player> ChatStatus:local
    }
  }

TownChatCommand:
  type: command
  debug: false
  name: tc
  description: town chat
  usage: /tc <&lt>Hello Town<&gt>
  aliases:
  - town
  permission: local.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
 # - if !<player.is_op||<context.server>> {
 #   - narrate "<red>You do not have permission for that command."
 #   - queue clear
 # }
  - if <player.town.name||null> == null {
    - narrate "You have not joined a Town!" targets:<player>
    - queue clear
  }
  - if <context.raw_args> != "" {
    - if <player.flag[TownChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have joined <white>town chat" targets:<player>
      - flag <player> TownChatOff:!
    }
    - if <server.list_online_players.filter[town.name.is[==].to[<player.town.name>]].size> <= 1 {
      - narrate "You are alone in this channel!" targets:<player>
    }
    - ^narrate "<context.raw_args>" targets:<server.list_online_players.filter[town.name.is[==].to[<player.town.name>]].exclude[<server.get_online_players_flagged[TownChatOff]>]> format:WorldTCFormat
    - narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy]> format:WorldSpyTCFormat
  }
  else {
    - if <player.flag[TownChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have joined <white>town chat" targets:<player>
      - flag <player> TownChatOff:!
    }
    - if <player.flag[ChatStatus]||local> != town {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>town"
      - flag <player> ChatStatus:town
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>town"
     # - flag <player> ChatStatus:local
    }
  }

NationChatCommand:
  type: command
  debug: false
  name: nc
  description: town chat
  usage: /nc <&lt>Arg1<&gt>
  aliases:
  - nation
  permission: local.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].include[pizza|potato|anchovy].filter[starts_with[<context.args.last>]]>
  script:
 # - if !<player.is_op||<context.server>> {
 #   - narrate "<red>You do not have permission for that command."
 #   - queue clear
 # }
  - if <player.nation.name||null> == null {
    - narrate "You have not joined a Nation!" targets:<player>
    - queue clear
  }
  - if <context.raw_args> != "" {
    - if <player.flag[NationChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have joined <white>nation chat" targets:<player>
      - flag <player> NationChatOff:!
    }
    - if <server.list_online_players.filter[nation.name.is[==].to[<player.nation.name>]].size> <= 1 {
      - narrate "You are alone in this channel!" targets:<player>
    }
    - ^narrate "<context.raw_args>" targets:<server.list_online_players.filter[nation.name.is[==].to[<player.nation.name>]].exclude[<server.get_online_players_flagged[NationChatOff]>]> format:WorldNCFormat
    - narrate "<context.raw_args>" targets:<server.get_online_players_flagged[SocialSpy]> format:WorldSpyNCFormat
  }
  else {
    - if <player.flag[NationChatOff]||false> == true {
      - narrate "<gold><&lb>Chat<&rb><dark_green> You have joined <white>nation chat" targets:<player>
      - flag <player> NationChatOff:!
    }
    - if <player.flag[ChatStatus]||local> != nation {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>nation"
      - flag <player> ChatStatus:nation
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>nation"
     # - flag <player> ChatStatus:local
    }
  }

TModChatCommand:
  type: command
  debug: false
  name: tm
  description: town chat
  usage: /tm <&lt>Arg1<&gt>
  aliases:
  - tmodchat
  - tmod
  permission: chat.tmod
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - if !<player.is_op||<context.server>> queue clear
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
 # - if !<player.has_permission[towny.chat.mod]||<context.server>> {
 #   - narrate "Unknown command. Type <&dq>/help<&dq> for help."
 #   - queue clear
 # }
  - if <context.raw_args> != "" {
    - if <server.list_online_players.filter[has_permission[chat.tmod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.filter[has_permission[chat.tmod]]> format:WorldTmodFormat
    - ^if <server.flag[TeaModBotOn]||false> == true {
      - ^run TeaModBot def:<player.name>|<context.raw_args>
    }
  }
  else {
    - if <player.flag[ChatStatus]||local> != tmod {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>T-Mod Chat"
      - flag <player> ChatStatus:tmod
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>T-Mod Chat"
     # - flag <player> ChatStatus:local
    }
    - if <server.list_online_players.filter[has_permission[chat.tmod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
  }

ModChatCommand:
  type: command
  debug: false
  name: mod
  description: town chat
  usage: /mod <&lt>Arg1<&gt>
  aliases:
  - modchat
  - md
  permission: chat.mod
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - if !<player.is_op||<context.server>> queue clear
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
 # - if !<player.has_permission[towny.chat.mod]||<context.server>> {
 #   - narrate "Unknown command. Type <&dq>/help<&dq> for help."
 #   - queue clear
 # }
  - if <context.raw_args> != "" {
    - if <server.list_online_players.filter[has_permission[chat.mod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
    - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.filter[has_permission[chat.mod]]> format:WorldModFormat
    - ^if <server.flag[TeaModBotOn]||false> == true {
      - ^run TeaModBot def:<player.name>|<context.raw_args>
    }
  }
  else {
    - if <player.flag[ChatStatus]||local> != mod {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>Mod Chat"
      - flag <player> ChatStatus:mod
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>Mod Chat"
     # - flag <player> ChatStatus:local
    }
    - if <server.list_online_players.filter[has_permission[chat.mod]].size> <= 1 {
      - narrate "<gold><&lb>Chat<&rb> <yellow>You are alone in this channel!" targets:<player>
    }
  }

AdminChatCommand:
  type: command
  debug: false
  name: admin
  description: town chat
  usage: /admin <&lt>Arg1<&gt>
  aliases:
  - ad
  permission: chat.admin
  permission message: <gold>[Dev] <dark_red>Please add the '<gold><permission><dark_red>' permission node!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - if !<player.is_op||<context.server>> queue clear
  - determine <server.list_online_players.parse[name].filter[starts_with[<context.args.last>]]>
  script:
 # - if !<player.has_permission[towny.chat.admin]||<context.server>> {
 #   - narrate "Unknown command. Type <&dq>/help<&dq> for help."
 #   - queue clear
 # }
  - if <context.raw_args> != "" {
    - if <server.list_online_players.filter[has_permission[chat.admin]].size> <= 1 {
      - narrate "You are alone in this channel!" targets:<player>
    }
    - ^narrate "<proc[ChatPluginFilter].context[<context.raw_args>]>" targets:<server.list_online_players.filter[has_permission[chat.admin]]> format:WorldAdminFormat
    - ^if <server.flag[TeaModBotOn]||false> == true {
      - ^run TeaModBot def:<player.name>|<context.raw_args>
    }
  }
  else {
    - if <player.flag[ChatStatus]||local> != admin {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are now talking in <white>Admin Chat"
      - flag <player> ChatStatus:admin
    }
    else {
      - ^narrate "<gold><&lb>Chat<&rb><dark_green> You are already talking in <white>Admin Chat"
     # - flag <player> ChatStatus:local
    }
  }



MeritistChatCommand:
  type: command
  debug: true
  name: mr
  description: meritist language chat
  usage: /mr <&lt>Arg1<&gt>
  aliases:
  - meritist
  permission: local.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].include[pizza|potato|anchovy].filter[starts_with[<context.args.last>]]>
  Default Constants:
    DefaultWorld: world
    SecondaryWorld: world
  script:
  - if <player.location.world> != w@<script.constant[SecondaryWorld]> {
    - narrate "Sorry, you can't use that here."
    - queue clear
  }
  - if <player.flag[SpeaksMeritist]||false> == false {
    - narrate "You do not speak Meritist!" targets:<player>
    - queue clear
  }
  - if <context.raw_args> != "" {
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "No one is in range to hear you!" targets:<player>
    }
    - ^define racename <player.flag[RaceName]||Common>
    - ^define message <context.raw_args>
    - inject langchat_meritist_%racename%
  }
  else {
    - if <player.flag[LanguageStatus]||common> != meritist {
      - ^narrate "<gold><&lb>x<&rb><dark_green> You are now speaking in <white>Meritist"
      - flag <player> LanguageStatus:meritist
    }
    else {
      - ^narrate "<gold><&lb>x<&rb><dark_green> You are already speaking in <white>Meritist"
    }
  }



DanausChatCommand:
  type: command
  debug: false
  name: dn
  description: danaus language chat
  usage: /dn <&lt>Arg1<&gt>
  aliases:
  - danaus
  permission: local.permission.node
  permission message: Sorry, <player.name>, you can't use my command because you don't have the permission '<permission>'!
  allowed help:
  - determine <player.is_op||<context.server>>
  tab complete:
  - determine <server.list_online_players.parse[name].include[pizza|potato|anchovy].filter[starts_with[<context.args.last>]]>
  Default Constants:
    DefaultWorld: world
    SecondaryWorld: world
  script:
  - if <player.location.world> != w@<script.constant[SecondaryWorld]> {
    - narrate "Sorry, you can't use that here."
    - queue clear
  }
  - if <player.flag[SpeaksDanaus]||false> == false {
    - narrate "You do not speak Danaus!" targets:<player>
    - queue clear
  }
  - if <context.raw_args> != "" {
    - if <player.location.find.players.within[70].size> <= 1 {
      - narrate "No one is in range to hear you!" targets:<player>
    }
    - ^define racename <player.flag[RaceName]||Common>
    - ^define message <context.raw_args>
    - inject langchat_danaus_%racename%
  }
  else {
    - if <player.flag[LanguageStatus]||common> != danaus {
      - ^narrate "<gold><&lb>x<&rb><dark_green> You are now speaking in <white>Danaus"
      - flag <player> LanguageStatus:danaus
    }
    else {
      - ^narrate "<gold><&lb>x<&rb><dark_green> You are already speaking in <white>Danaus"
    }
  }


langchat_danaus_common:
  type: task
  script:
  - narrate "%message%" targets:<player.location.find.players.within[70]> format:WorldDanaustSpeakingDanausFormat

langchat_meritist_common:
  type: task
  script:
  - if <player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[==].to[fluent]].size> >= 1 {
    - narrate "%message%" targets:<player.location.find.players.within[70]> format:WorldMeritistSpeakingMeritistFormat
  }
  - if <player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[!=].to[fluent]].size> >= 1 {
    - inject Language_Parser_meritist
  }

Language_Parser_meritist:
  type: task
  Default Constants:
    tophundred: the|be|to|of|and|a|in|that|have|I|it|for|not|on|with|he|as|you|do|at|this|but|his|by|from|they|we|say|her|she|or|an|will|my|one|all|would|there|their|what|so|up|out|if|about|who|get|which|go|me|when|make|can|like|time|no|just|him|know|take|people|into|year|your|good|some|could|them|see|other|than|then|now|look|only|come|its|over|think|also|back|after|use|two|how|our|work|first|well|way|even|new|want|because|any|these|give|day|most|us
  script:
    - if <player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[==].to[unintelligible]].size> >= 1 {
      - narrate "<red><def[message].replace[regex:ck].with[n].replace[regex:ph].with[f].replace[regex:\bmy\b].with[uu].replace[regex:(?<&lt>=\b.+)c(?=.+\b)].with[].replace[regex:o].with[u].replace[regex:th].with[m].replace[regex:h].with[k].replace[regex:e].with[i].replace[regex:w].with[].replace[regex:'].with[].replace[regex:d].with[di].replace[regex:r\b].with[].replace[regex:g].with[me].replace[regex:a].with[e].replace[regex:j].with[i].replace[regex:y].with[].replace[regex:s].with[si].replace[regex:l].with[ka].replace[regex:<&sq>\b].with[].replace[regex:\bc(?=k)].with[].replace[regex:\bk\b].with[kei].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:(?<&lt>=\b.+)r(?=(k|t|p|s).*\b)].with[ri].replace[regex:(?<&lt>=\b.+)p(?=(k|t|p|s).*\b)].with[pi].replace[regex:(?<&lt>=\b.+)t(?=(k|t|p|s).*\b)].with[ti].replace[regex:(?<&lt>=\b.+)k(?=(k|t|p|s).*\b)].with[ki].replace[regex:(?<&lt>=a(k|p|t|s))a(?=\b)].with[].replace[regex:(?<&lt>=s)i(?=(k|p|t).+\b)].with[].replace[regex:(?<&lt>=i(k|p|t|s))i(?=\b)].with[].replace[regex:(?<&lt>=e(k|p|t|s))e(?=\b)].with[].replace[regex:(?<&lt>=o(k|p|t|s))o(?=\b)].with[].replace[regex:(?<&lt>=u(k|p|t|s))u(?=\b)].with[].replace[regex:(?<&lt>=\b.+r)e(?=r.+\b)].with[a].replace[regex:(?<&lt>=\b.+(m|n))k(?=.+\b)].with[g].replace[regex:\be(?=(m|n).*\b)].with[u]>" targets:<player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[==].to[unintelligible]]> format:WorldMeritistSpeakingMeritistFormat
    }
    - if <player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[==].to[intermediate]].size> >= 1 {
      - define ChatMessageAsList <def[message].replace[regex:<&sq>].with[|].replace[regex:<&sp>].with[|].as_list>
      - flag <player> ChatMessagePrep:!
      - foreach %ChatMessageAsList% {
        - if <script.constant[tophundred].contains[%value%]||false> {
          - flag <player> ChatMessagePrep:->:<white>%value%
        }
        else {
          - flag <player> WordParser:%value%
          - define WordParse <player.flag[WordParser].replace[regex:ck].with[n].replace[regex:ph].with[f].replace[regex:\bmy\b].with[uu].replace[regex:(?<&lt>=\b.+)c(?=.+\b)].with[].replace[regex:o].with[u].replace[regex:th].with[m].replace[regex:h].with[k].replace[regex:e].with[i].replace[regex:w].with[].replace[regex:<&sq>].with[].replace[regex:d].with[di].replace[regex:r\b].with[].replace[regex:g].with[me].replace[regex:a].with[e].replace[regex:j].with[i].replace[regex:y].with[].replace[regex:s].with[si].replace[regex:l].with[ka].replace[regex:<&sq>\b].with[].replace[regex:\bc(?=k)].with[].replace[regex:\bk\b].with[kei].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:(?<&lt>=\b.+)r(?=(k|t|p|s).*\b)].with[ri].replace[regex:(?<&lt>=\b.+)p(?=(k|t|p|s).*\b)].with[pi].replace[regex:(?<&lt>=\b.+)t(?=(k|t|p|s).*\b)].with[ti].replace[regex:(?<&lt>=\b.+)k(?=(k|t|p|s).*\b)].with[ki].replace[regex:(?<&lt>=a(k|p|t|s))a(?=\b)].with[].replace[regex:(?<&lt>=s)i(?=(k|p|t).+\b)].with[].replace[regex:(?<&lt>=i(k|p|t|s))i(?=\b)].with[].replace[regex:(?<&lt>=e(k|p|t|s))e(?=\b)].with[].replace[regex:(?<&lt>=o(k|p|t|s))o(?=\b)].with[].replace[regex:(?<&lt>=u(k|p|t|s))u(?=\b)].with[].replace[regex:(?<&lt>=\b.+r)e(?=r.+\b)].with[a].replace[regex:(?<&lt>=\b.+(m|n))k(?=.+\b)].with[g].replace[regex:\be(?=(m|n).*\b)].with[u]||<player.flag[WordParser]>>
         # - define WordParse <el@%value%.as_element.replace[regex:ck].with[n].replace[regex:o].with[u].replace[regex:th].with[m].replace[regex:h].with[k].replace[regex:e].with[i].replace[regex:w].with[].replace[regex:'].with[].replace[regex:d].with[di].replace[regex:r\b].with[].replace[regex:g].with[me'].replace[regex:a].with[e].replace[regex:y].with[].replace[regex:s].with[si].replace[regex:l].with[ka]>
          - flag <player> ChatMessagePrep:->:<red>%WordParse%
        }
      }
      - narrate "<player.flag[ChatMessagePrep].as_list.replace[regex:\|].with[<&sp>].replace[regex:li@].with[].replace[regex:null].with[]||Error>"  targets:<player.location.find.players.within[70].filter[flag[UnderstandsMeritist].is[==].to[intermediate]]> format:WorldMeritistSpeakingMeritistFormat
    }
    - announce "<player.name> said <context.message>'" to_flagged:ReplenishListener
    - announce "<def[message].replace[regex:ck].with[n].replace[regex:ph].with[f].replace[regex:\bmy\b].with[uu].replace[regex:(?<&lt>=\b.+)c(?=.+\b)].with[].replace[regex:o].with[u].replace[regex:th].with[m].replace[regex:h].with[k].replace[regex:e].with[i].replace[regex:w].with[].replace[regex:'].with[].replace[regex:d].with[di].replace[regex:r\b].with[].replace[regex:g].with[me].replace[regex:a].with[e].replace[regex:j].with[i].replace[regex:y].with[].replace[regex:s].with[si].replace[regex:l].with[ka].replace[regex:<&sq>\b].with[].replace[regex:\bc(?=k)].with[].replace[regex:\bk\b].with[kei].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:i<&sp>i].with[<&sq>i].replace[regex:(?<&lt>=\b.+)r(?=(k|t|p|s).*\b)].with[ri].replace[regex:(?<&lt>=\b.+)p(?=(k|t|p|s).*\b)].with[pi].replace[regex:(?<&lt>=\b.+)t(?=(k|t|p|s).*\b)].with[ti].replace[regex:(?<&lt>=\b.+)k(?=(k|t|p|s).*\b)].with[ki].replace[regex:(?<&lt>=a(k|p|t|s))a(?=\b)].with[].replace[regex:(?<&lt>=s)i(?=(k|p|t).+\b)].with[].replace[regex:(?<&lt>=i(k|p|t|s))i(?=\b)].with[].replace[regex:(?<&lt>=e(k|p|t|s))e(?=\b)].with[].replace[regex:(?<&lt>=o(k|p|t|s))o(?=\b)].with[].replace[regex:(?<&lt>=u(k|p|t|s))u(?=\b)].with[].replace[regex:(?<&lt>=\b.+r)e(?=r.+\b)].with[a].replace[regex:(?<&lt>=\b.+(m|n))k(?=.+\b)].with[g].replace[regex:\be(?=(m|n).*\b)].with[u]>" to_flagged:ReplenishListener






WorldGlobalNationFormat:
  type: format
  debug: false
  #format: <white>[<gray>G<white>][<gray><player.nation.name||Nation><white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  format: <white><proc[msgCommand].context[<white><&lb><gray>G<white><&rb>|bottleneck<&sp>g|<white>Global Chat<&co> <gray>Click to join<&nl><gray><util.date.time>]><proc[msgCommand].context[<white><&lb><gray><player.nation.name||Nation><white><&rb>|bottleneck<&sp>t<&sp><player.town.name||>|<dark_aqua><player.town.name||Town><&sc> <gray><player.nation.name||Nation><gray><&co> Click for more info]><proc[msgCommand].context[<player.flag[DonatorStar]||<&sp><gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <gray><text>

  # <text> will become the message 

WorldGlobalNationlessFormat:
  type: format
  debug: false
  format: <white><proc[msgCommand].context[<&lb><gray>G<white><&rb>|bottleneck<&sp>g|<white>Global Chat<&co> <gray>Click to join<&nl><gray><util.date.time>]><proc[msgCommand].context[<player.flag[DonatorStar]||<&sp><gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <gray><text>
  # <text> will become the message 

WorldSupportFormat:
  type: format
  debug: false
  format: <proc[msgCommand].context[<green><&lb><dark_green>S<green><&rb><player.flag[DonatorStar]||<&sp><dark_green>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>s<&sp>Thanks<&sp><player.name>!|<dark_green>Support Chat - Spirit Chat<&co> <util.date.time><&nl><green>Range<&co> Global<&nl><green>Moderated<&nl><&nl><green>Use this channel to ask other<&nl><green>Players for help! New Players<&nl><green>can access ONLY this channel.<&nl><&nl><green>Click here to thank this player!]><green><&co> <green><text>
  # <text> will become the message

WorldOOCNationFormat:
  type: format
  debug: false
  #format: <white>[<gray>OOC<white>][<gray><player.nation.name||Nation><white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  format: <white><proc[msgCommand].context[<white><&lb><gray>OOC<white><&rb>|bottleneck<&sp>ooc|<white>Out-Of-Character Chat<&co> <gray>Click to join<&nl><gray><util.date.time>]><proc[msgCommand].context[<white><&lb><gray><player.nation.name||Nation><white><&rb>|bottleneck<&sp>t<&sp><player.town.name||>|<dark_aqua><white><player.town.name||Town><&sc> <gray><player.nation.name||Nation><gray><&co> Click for more info]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <gray><text>

  # <text> will become the message 

WorldOOCNationlessFormat:
  type: format
  debug: false
 # format: <white>[<gray>OOC<white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  format: <white><proc[msgCommand].context[<white><&lb><gray>OOC<white><&rb>|bottleneck<&sp>ooc|<white>Out-Of-Character Chat<&co> <gray>Click to join<&nl><gray><util.date.time>]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <gray><text>

  # <text> will become the message 

WorldOOCRaceFormat:
  type: format
  debug: false
  format: <white>[<gray>OOC<white>]<&lb><gray><player.nation.name||-><white><&rb><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||><player.name.display><white><&co> <gray><text>
  # <text> will become the message 

WorldOOCRacelessFormat:
  type: format
  debug: false
  format: <white>[<gray>OOC<white>]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  # <text> will become the message 

WorldLocalNationFormat:
  type: format
  debug: false
 # format: <white>[RP]<&lb><dark_aqua><player.town.name||Town><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  format: <white><proc[msgCommand].context[<white><&lb>RP<&rb>|bottleneck<&sp>l|<white>RolePlay/Local Chat<&co> <gray>Click to join<&nl><gray><util.date.time>]><proc[msgCommand].context[<white><&lb><dark_aqua><player.town.name||Town><white><&rb>|bottleneck<&sp>t<&sp><player.town.name||>|<dark_aqua><white><player.town.name||Town><&sc> <gray><player.nation.name||Nation><gray><&co> Click for more info]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <gray><text>

  # <text> will become the message 

WorldLocalNationlessFormat:
  type: format
  debug: false
  #format: <white>[RP]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  format: <white><proc[msgCommand].context[<white><&lb>L<&rb><&sp>|bottleneck<&sp>l|<white>Local Chat - RolePlay Chat<&co> <util.date.time><&nl>Range<&co> 70 blocks<&nl><&nl>Use this channel to talk with<&nl>nearby Players!<&nl><&nl>Click to switch to this channel!]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <white><text>
  # <text> will become the message 

WorldLocalRaceFormat:
  type: format
  debug: false
  format: <white> [RP]<&lb><dark_aqua><player.town.name||Town><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message

WorldSpiritRaceFormat:
  type: format
  debug: false
  format: <white> [RPx]<&lb><dark_aqua><player.town.name||Town><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message

WorldLocalRacelessFormat:
  type: format
  debug: false
  format: <white>[RP]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 

WorldTCFormat:
  type: format
  debug: false
  format: <white>[<dark_aqua>TC<white>]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 

WorldNCFormat:
  type: format
  debug: false
  format: <white>[<gold>NC<white>]<&lb><dark_aqua><player.town.name||-><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message

WorldModFormat:
  type: format
  debug: false
  format: <dark_aqua>[<dark_aqua>MOD<dark_aqua>] <player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<dark_aqua><player.name.display>><white><&co> <white><text>
  # <text> will become the message 
WorldTmodFormat:
  type: format
  debug: false
  format: <green>[<green>TM<green>] <player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<green><player.name.display>><white><&co> <white><text>
  # <text> will become the message 
WorldAdminFormat:
  type: format
  debug: false
  format: <gold>[<gold>ADMIN<gold>] <white><player.flag[Nickname]||<player.name.display>><red><&co> <gold><text>
  # <text> will become the message 

  # ---------------- #
  # WORLD BOUNDARY #
  # ---------------- #


WorldSpyGlobalNationFormat:
  type: format
  debug: false
  format: <white>[<gray>G<white>][<gray><player.nation.name||Nation><white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  # <text> will become the message 

WorldSpyGlobalNationlessFormat:
  type: format
  debug: false
  format: <white>[<gray>G<white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  # <text> will become the message 

WorldSpyOOCNationFormat:
  type: format
  debug: false
  format: <gray>[OOC][<gray><player.nation.name||Nation><white>]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <green><text>
  # <text> will become the message 

WorldSpyOOCNationlessFormat:
  type: format
  debug: false
  format: <gray>[OOC]<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><gray><&co> <green><text>
  # <text> will become the message 

WorldSpyOOCRaceFormat:
  type: format
  debug: false
  format: <white>[<gray>OOC<white>]<&lb><gray><player.nation.name||-><white><&rb><<player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  # <text> will become the message 

WorldSpyOOCRacelessFormat:
  type: format
  debug: false
  format: <white>[<gray>OOC<white>]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><white><&co> <gray><text>
  # <text> will become the message 

WorldSpyLocalNationFormat:
  type: format
  debug: false
 # format: <gray>[RP]<&lb><dark_aqua><player.town.name||Town><gray><&rb><gray><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <green><text>
  format: <gray><proc[msgCommand].context[<gray><&lb>RP<&rb>|bottleneck<&sp>l|<white>RolePlay/Local Chat<&co> <gray>Click to join]><proc[msgCommand].context[<gray><&lb><dark_aqua><player.town.name||Town><gray><&rb>|bottleneck<&sp>t<&sp><player.town.name||>|<dark_aqua><player.town.name||Town><gray><&co> Click for more info]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <green><text>

  # <text> will become the message 

WorldSpyLocalNationlessFormat:
  type: format
  debug: false
  #format: <gray>[RP]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <green><text>
  format: <gray><proc[msgCommand].context[<gray><&lb>RP<&rb>|bottleneck<&sp>l|<white>RolePlay/Local Chat<&co> <gray>Click to join]><proc[msgCommand].context[<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>>|bottleneck<&sp>res<&sp><player.name>|<gray><player.flag[DonatorStar]||<gray>><player.name><gray><&co> Click to view profile]><white><&co> <green><text>

  # <text> will become the message 

WorldSpyLocalRaceFormat:
  type: format
  debug: false
  format: <white>[RP]<&lb><dark_aqua><player.town.name||Town><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message

WorldSpyLocalRacelessFormat:
  type: format
  debug: false
  format: <white>[RP]<white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 

WorldSpyTCFormat:
  type: format
  debug: false
  format: <gray>[<dark_aqua>TC<gray>]<&lb><dark_aqua><player.town.name||-><gray><&rb><gray><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <green><text>
  # <text> will become the message 

WorldSpyNCFormat:
  type: format
  debug: false
  format: <gray>[<gold>NC<gray>]<&lb><dark_aqua><player.town.name||-><gray><&rb><gray><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <green><text>
  # <text> will become the message

WorldSpyModFormat:
  type: format
  debug: false
  format: <white>[<blue>M<white>]<&lb><dark_aqua><player.town.name||-><white><&rb><white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 

WorldMeritistSpeakingMeritistFormat:
  type: format
  debug: false
  format: <white>[RP]<&lb><red><player.flag[RaceName]||Common><white><&rb> <white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 

WorldDanaustSpeakingDanausFormat:
  type: format
  debug: false
  format: <white>[RP]<&lb><aqua><player.flag[RaceName]||Common><white><&rb> <white><player.flag[DonatorStar]||<gray>><player.flag[Nickname]||<player.name.display>><&co> <white><text>
  # <text> will become the message 